{"version":3,"sources":["containers/Mowa/actionType.js","containers/Mowa/action.js","containers/Mowa/mowaWrapper.js","components/WelcomeBanner/Wrapper.js","components/WelcomeBanner/index.js","components/BottomBanner/Wrapper.js","components/BottomBanner/index.js","components/Navigation/Wrapper.js","components/Navigation/index.js","components/LeftSideBanner/Wrapper.js","components/LeftSideBanner/index.js","components/RightSideBanner/Wrapper.js","components/RightSideBanner/index.js","components/MainContent/Wrapper.js","containers/Mowa/reducer.js","store.js","service/Fetching/index.js","components/MainContent/index.js","containers/Mowa/index.js","containers/Main/index.js","app/index.js","serviceWorker.js","index.js"],"names":["CREATE_POST","CRAWLING_FROM_DOGDRIPNET","crawlingFromDogDripNet","titleList","linkList","length","type","payload","addPost","id","title","Wrapper","styled","div","_templateObject","Wrapper_templateObject","WelcomeBanner","props","react_default","a","createElement","WelcomeBanner_Wrapper","className","BottomBanner_Wrapper_templateObject","BottomBanner","BottomBanner_Wrapper","Navigation_Wrapper_templateObject","node","result","i","push","concat","test","tabs","template","Navigation_Wrapper","tabsInfo","map","idx","key","href","LeftSideBanner_Wrapper_templateObject","LeftSideBanner","LeftSideBanner_Wrapper","RightSideBanner_Wrapper_templateObject","RightSideBanner","RightSideBanner_Wrapper","MainContent_Wrapper_templateObject","initState","reducer","mowa","state","arguments","undefined","action","Types","_action$payload","console","info","Object","objectSpread","_action$payload2","middleware","toConsumableArray","getDefaultMiddleware","logger","store","configureStore","devTools","process","enhancers","reduxBatch","log","DogDrip","_DogDrip","apply","this","_callee","dogDripSelector","regenerator_default","wrap","_context","prev","next","html","dogDrip","$","cheerio","load","text","link","attr","axios","get","then","res","status","data","catch","err","dispatch","stop","fetchingData","abrupt","mapDispatchToProps","connect","MainContent_Wrapper","onClick","mowaWrapper","components_MainContent","Main","react_router_dom","to","App","react_router","path","exact","component","Mowa","Boolean","window","location","hostname","match","ReactDOM","render","es","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a24f5109.chunk.js","sourcesContent":["export const TEMP = '';\nexport const CREATE_POST = 'CREATE_POST';\nexport const CRAWLING_FROM_DOGDRIPNET= 'CRAWLING_FROM_DOGDRIPNET';","import { CREATE_POST, TEMP, CRAWLING_FROM_DOGDRIPNET } from './actionType';\n\nexport function temp(dummy) {\n    return {\n        type: TEMP,\n        payload: dummy,\n    };\n}\nexport function crawlingFromDogDripNet(titleList, linkList, length) {\n    return {\n        type: CRAWLING_FROM_DOGDRIPNET,\n        payload: { titleList, linkList, length },\n    };\n}\n\nexport function addPost(id, title) {\n    return {\n        type: CREATE_POST,\n        payload: { id, title },\n    };\n}\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background: orange;\n    color: white;\n    width: 100%;\n    height: 100%;\n\n    display: grid;\n    /* grid-template-columns: repeat(3, 1fr); */\n    /* grid-auto-columns: 3; */\n    /* grid-gap: 0px; */\n    /* grid-auto-rows: minmax(100px, auto); */\n\n    .item1 {\n        grid-row: 1;\n        grid-column: 1/12;\n    }\n    .item2 {\n        grid-row: 2;\n        grid-column: 1/12;\n    }\n    .item3 {\n        grid-row: 3;\n        grid-column: 1/2;\n    }\n    .item4 {\n        grid-row: 3;\n        grid-column: 2/11;\n    }\n    .item5 {\n        grid-row: 3;\n        grid-column: 11/12;\n    }\n    .item6 {\n        grid-row: 4;\n        grid-column: 1/12;\n    }\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background: green;\n    color: white;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Wrapper';\n\nexport default function WelcomeBanner(props) {\n    return (\n        <Wrapper className='item1'>\n            <div>welcome to visit our website!</div>\n        </Wrapper>\n    );\n}\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background: green;\n    color: white;\n    width: 100%;\n    height: 100%;\n    display: grid;\n\n    .content {\n        grid-row: 1;\n        text-align: center;\n        /* grid-column: 6/1,5; */\n        grid-column-start: 1;\n        grid-column-end: 11;\n    }\n\n    .versionTag {\n        text-align: right;\n        grid-row: 1;\n        /* grid-column: 6/6; */\n        grid-column-start: 11;\n        grid-column-end: 12;\n    }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Wrapper';\n\nexport default function BottomBanner(props) {\n    return (\n        <Wrapper className='item6'>\n            <div className='content'>BottomBanner</div>\n            <div className='versionTag'>0.0.1</div>\n        </Wrapper>\n    );\n}\n","import styled from 'styled-components';\n\nfunction test(node) {\n    let result = [];\n    for (let i = 1; i < node + 1; i++) {\n        result.push(\n            `.item${i} {\n                list-style: none;\n                grid-row: 1;\n                grid-column-start: ${i};\n                grid-column-end: ${i};\n                text-align: center;\n            }`,\n        );\n    }\n    return result;\n}\n\nconst Wrapper = styled.div`\n    background: blue;\n    color: white;\n    display: grid;\n\n    ${(props) => test(props.tabs)}\n\n    .tabMother {\n        display: grid;\n    }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Wrapper';\n\nfunction tabGenerator(tabsInfo) {\n    const result = tabsInfo.map((node, idx) => {\n        const key = 'item' + (idx + 1);\n        return (\n            <li key={key} className={key}>\n                <a href='http://localhost:3000'>{node}</a>\n            </li>\n        );\n    });\n\n    return result;\n}\n\nexport default function template(props) {\n    return (\n        <Wrapper tabs={props.tabsInfo.length} className='item2'>\n            <ol className='tabMother'>{tabGenerator(props.tabsInfo)}</ol>\n        </Wrapper>\n    );\n}\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div``;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Wrapper';\n\nexport default function LeftSideBanner(props) {\n    return <Wrapper className='item3'>SideMenus</Wrapper>;\n}\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div``;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Wrapper';\n\nexport default function RightSideBanner(props) {\n    return <Wrapper className='item5'>RightSideBanner</Wrapper>;\n}\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div``;\n\nexport default Wrapper;\n","// import { createReducer } from 'redux-starter-kit';\nimport * as Types from './actionType';\n\nconst initState = {\n    tabs: ['HOME', 'Favorite', 'TOP100', 'ALLSITE', 'DEV'],\n};\n\nexport default function mowaReducer(state = initState, action) {\n    switch (action.type) {\n        case Types.CREATE_POST: {\n            const { id, title } = action.payload;\n            // Omit actual code\n            console.info('£££ CREATE_POST CALLED IN REDUCER : ', id, title);\n            return { ...state };\n        }\n\n        case Types.CRAWLING_FROM_DOGDRIPNET: {\n            const { titleList, linkList, length } = action.payload;\n            // Omit actual code\n            console.info(\n                '£££ CRAWLING_FROM_DOGDRIPNET CALLED IN REDUCER : ',\n                titleList,\n                linkList,\n                length,\n            );\n\n            return { ...state };\n        }\n\n        default:\n            return state;\n    }\n}\n","import { reduxBatch } from '@manaflair/redux-batch';\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger';\nimport { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\nimport mowaReducer from './containers/Mowa/reducer';\n\nconst reducer = {\n    mowa: mowaReducer,\n};\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\n// const preloadedState = {\n//     todos: [\n//         {\n//             text: 'Eat food',\n//             completed: true,\n//         },\n//         {\n//             text: 'Exercise',\n//             completed: false,\n//         },\n//     ],\n//     visibilityFilter: 'SHOW_COMPLETED',\n// };\n\nconst store = configureStore({\n    reducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== 'production',\n    // preloadedState,\n    enhancers: [reduxBatch],\n});\n\nexport default store;\n\n// The store has been created with these options:\n// - The slice reducers were automatically passed to combineReducers()\n// - redux-thunk and redux-logger were added as middleware\n// - The Redux DevTools Extension is disabled for production\n// - The middleware, batch, and devtools enhancers were automatically composed together\n","import axios from 'axios';\nimport cheerio from 'cheerio';\nimport store from '../../store';\nimport * as action from '../../containers/Mowa/action';\n\nimport { crawlingFromDogDripNet } from '../../containers/Mowa/action';\nconst log = console.log;\nconst info = console.info;\n\nexport default async function DogDrip() {\n    const titleList = [];\n    const linkList = [];\n    const length = 20;\n    const url = 'https://www.dogdrip.net/index.php?mid=dogdrip&page=1';\n\n    await axios\n        .get(url)\n        .then((res) => {\n            if (res.status === 200) {\n                dogDripSelector(res.data);\n            }\n        })\n        .catch((err) => log(err));\n\n    function dogDripSelector(html) {\n        for (let i = 1; i < length + 1; i++) {\n            const dogDrip = `#main > div > div.eq.section.secontent.background-color-content > div > div.ed.board-list > table > tbody > tr:nth-child(${i})`;\n            const $ = cheerio.load(html);\n            const title = $(\n                dogDrip + '> td.title > a > span.ed.title-link',\n            ).text();\n            const link = $(dogDrip + '> td.title > a').attr('href');\n            // info(title);\n            titleList.push(title);\n            // info(link);\n            linkList.push(link);\n        }\n    }\n    store.dispatch(action.crawlingFromDogDripNet(titleList, linkList, length));\n}\n","import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport cheerio from 'cheerio';\n\nimport { addPost, crawlingFromDogDripNet } from '../../containers/Mowa/action';\nimport Wrapper from './Wrapper';\nimport DogDrip from '../../service/Fetching';\n\nconst log = console.log;\nconst info = console.info;\n\nasync function fetchingData() {\n    DogDrip();\n    return '123';\n}\n\nfunction MainContent(props) {\n    // return <Wrapper className='item4'>{getHtml()}</Wrapper>;\n    return (\n        <Wrapper className='item4'>\n            <button onClick={fetchingData()}>123</button>\n        </Wrapper>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tabs: state.mowa.tabs,\n    };\n};\n\nconst mapDispatchToProps = { addPost, crawlingFromDogDripNet };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(MainContent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPost } from './action';\nimport Wrapper from './mowaWrapper';\nimport WelcomeBanner from '../../components/WelcomeBanner';\nimport BottomBanner from '../../components/BottomBanner';\nimport Navigation from '../../components/Navigation';\nimport LeftSideBanner from '../../components/LeftSideBanner';\nimport RightSideBanner from '../../components/RightSideBanner';\nimport MainContent from '../../components/MainContent';\n\nfunction Mowa(props) {\n    return (\n        <Wrapper>\n            <WelcomeBanner />\n            <Navigation tabsInfo={props.tabs} />\n            <LeftSideBanner />\n            <MainContent />\n            <RightSideBanner />\n            <BottomBanner />\n        </Wrapper>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tabs: state.mowa.tabs,\n    };\n};\n\nconst mapDispatchToProps = { addPost };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Mowa);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nfunction Main() {\n    return (\n        <div>\n            Welcome to visit me!\n            <nav>\n                <ul>\n                    <li>\n                        <Link to='/'>Mowa</Link>\n                    </li>\n                    <li>\n                        <Link to='/main'>main</Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport './App.css';\nimport Mowa from '../containers/Mowa';\nimport Main from '../containers/Main';\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Route path='*' exact component={Mowa} />\n                <Route exact path='/main/' component={Main} />\n                {/* <Route path='/users/' component={Users} /> */}\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// And use redux-batch as an example of adding enhancers\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}